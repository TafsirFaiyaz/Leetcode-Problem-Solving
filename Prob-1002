#1002. Find Common Characters

# The result accepts duplicate val. It means, if there are two "a" common in all strings the result must have ["a", "a"] in it.

class Solution(object):
    def commonChars(self, words):
        """
        :type words: List[str]
        :rtype: List[str]
        """
        result = []

        for i in range(len(words[0])):
            x = words[0][i]                # Will check by each charecter of word[0]
            
            if x not in result:
                
                mini = 99999
                output = True
                
                for j in words:
                    
                    if x not in j:       # If the charecter is missing in 1 string then we don't need to check others as it won't be in our result.
                        output = False
                        break

                    else:
                        count = 0        # Checking the minimum number of occurance of the same charecter.
                        for k in j:
                            if k == x:
                                count +=1

                        if count < mini:
                            mini = count
                
                if output:
                    
                    for l in range(mini):   # appending the minimum number of occurance of the same string, as the result can have duplicate strings.
                        
                        result.append(x)

        return result
